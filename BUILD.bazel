load("@bazel_gazelle//:def.bzl", "gazelle")
load("@buildifier_prebuilt//:rules.bzl", "buildifier", "buildifier_test")
load("@hedron_compile_commands//:refresh_compile_commands.bzl", "refresh_compile_commands")

refresh_compile_commands(
    name = "refresh_compile_commands",

    # Specify the targets of interest.
    # For example, specify a dict of targets and any flags required to build.
    targets = {
        "//cpp/...": "",
    },
)

gazelle(name = "gazelle")

buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./.bazelbsp/*",
        "./vcpkg_installed/*",
    ],
    lint_mode = "fix",
)

buildifier_test(
    name = "buildifier_test",
    size = "small",
    timeout = "short",
    exclude_patterns = [
        "./.bazelbsp/*",
        "./.ijwb/*",
        "./.clwb/*",
        "./vcpkg_installed/*",
    ],
    lint_mode = "warn",
    mode = "diff",
    no_sandbox = True,
    workspace = "//:MODULE.bazel",
)

config_setting(
    name = "is_mac",
    constraint_values = [
        "@platforms//cpu:aarch64",
        "@platforms//os:macos",
    ],
)

config_setting(
    name = "is_linux",
    constraint_values = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
)
