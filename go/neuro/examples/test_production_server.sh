#!/bin/bash

echo "=== Production Server Test Script ==="
echo ""
echo "This script demonstrates how to test the production inference server."
echo ""

# First, check if a model exists
if [ ! -d "models/mnist_vendored_model" ]; then
    echo "⚠️  No trained model found!"
    echo ""
    echo "Please train a model first by running:"
    echo "  bazel run //go/neuro/examples:mnist_vendored"
    echo ""
    echo "The server will start in mock mode for demonstration."
fi

echo ""
echo "To start the production server:"
echo "  bazel run //go/neuro/examples:mnist_production"
echo ""
echo "The server will:"
echo "  ✅ Use mucks for routing"
echo "  ✅ Apply rate limiting (100 req/s per IP)"
echo "  ✅ Log all requests"
echo "  ✅ Return JSON responses"
echo "  ✅ Only load model weights (no training data)"
echo ""
echo "Once running, test it with:"
echo ""
echo "1. Health check:"
echo "   curl http://localhost:8080/health"
echo ""
echo "2. Model info:"
echo "   curl http://localhost:8080/info"
echo ""
echo "3. Make a prediction (example with zeros):"
echo "   curl -X POST http://localhost:8080/predict \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{\"pixels\": ['$(printf '0.0, %.0s' {1..783})'0.0]}'"
echo ""
echo "4. Test rate limiting (will be blocked after 100 requests/second):"
echo "   for i in {1..150}; do curl -s http://localhost:8080/health > /dev/null & done"
echo "   echo 'Sent 150 requests - some should be rate limited'"
echo ""
echo "Press Ctrl+C to stop the server when done testing."