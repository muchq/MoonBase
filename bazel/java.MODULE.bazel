bazel_dep(name = "rules_java", version = "8.11.0")
bazel_dep(name = "rules_jvm_external", version = "6.7")
bazel_dep(name = "contrib_rules_jvm", version = "0.28.0")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")

JACKSON_VERSION = "2.17.1"

JETTY_VERSION = "11.0.23"

LOGBACK_VERSION = "1.5.6"

NETTY_VERSION = "4.1.118.Final"

maven.install(
    artifacts = [
        "ch.qos.logback:logback-classic:%s" % LOGBACK_VERSION,
        "ch.qos.logback:logback-core:%s" % LOGBACK_VERSION,
        "com.fasterxml.jackson.core:jackson-annotations:%s" % JACKSON_VERSION,
        "com.fasterxml.jackson.core:jackson-core:%s" % JACKSON_VERSION,
        "com.fasterxml.jackson.core:jackson-databind:%s" % JACKSON_VERSION,
        "com.fasterxml.jackson.datatype:jackson-datatype-guava:%s" % JACKSON_VERSION,
        "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:%s" % JACKSON_VERSION,
        "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:%s" % JACKSON_VERSION,
        "com.fasterxml.jackson.module:jackson-module-scala_2.13:%s" % JACKSON_VERSION,
        "com.google.guava:guava:33.4.7-jre",
        "io.netty:netty-common:%s" % NETTY_VERSION,
        "io.netty:netty-codec:%s" % NETTY_VERSION,
        "io.netty:netty-handler:%s" % NETTY_VERSION,
        "io.netty:netty-transport:%s" % NETTY_VERSION,
        "io.sentry:sentry-logback:8.8.0",
        "junit:junit:4.13.2",
        "org.assertj:assertj-core:3.27.3",
        "org.eclipse.jetty:jetty-server:%s" % JETTY_VERSION,
        "org.eclipse.jetty.websocket:websocket-jetty-server:%s" % JETTY_VERSION,
        "org.scala-lang:scala3-library_3:jar:3.3.1",
        "org.scala-lang:scala3-compiler_3:3.6.3",
        "org.slf4j:slf4j-api:2.0.17",
    ],
    lock_file = "//:maven_install.json",
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(maven, "maven")
